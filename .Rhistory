e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
}
statpop_baden[i] <- statpop_yr
}
statpop_baden <- c(2021:11)
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GMDE)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
#filters data to only show that around Baden
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
}
statpop_baden[i] <- statpop_yr
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
#filters data to only show that around Baden
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
}
statpop_baden[i] <- statpop_yr
}
View(statpop_baden)
statpop_baden <- c(2021:2011)
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
#filters data to only show that around Baden
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
dplyr::select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
}
statpop_baden[i] <- statpop_yr
}
View(statpop_yr)
select(statpop_yr, -c(RELI))
library(dplyr)
select(statpop_yr, -c(RELI))
x <- select(statpop_yr, -c(RELI))
View(x)
rm(x)
years <- c(2021:2011)
years <- c(2021:2011)
statpop_baden <- years
library(tidyverse)
library(dplyr)
library(readr)
library(readxl)
library(xlsx)
communes_baden <- read_excel("2021_Gemeinden.xlsx") %>%
mutate(GMDE=`Gmd-Nr.`) #give the municipality number column the same name as in coords_gmde
statpop <- c("statpop/STATPOP2021.csv",
"statpop/STATPOP2020.csv",
"statpop/STATPOP2019.csv",
"statpop/STATPOP2018.csv",
"statpop/STATPOP2017.csv",
"statpop/STATPOP2016.csv",
"statpop/STATPOP2015.csv",
"statpop/STATPOP2014.csv",
"statpop/STATPOP2013.csv",
"statpop/STATPOP2012.csv",
"statpop/STATPOP2011.csv")
years <- c(2021:2011)
statpop_baden <- years
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD))
#filters data to only show that around Baden
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
}
statpop_baden <- left_join(statpop_baden, statpop_yr, by=RELI)
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(-c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by=RELI)
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by=RELI)
}
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by=RELI)
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by=RELI)
}
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
}
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
}
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i]) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
}
#needs to be altered to be 1 df with all years
}
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, show_col_types = FALSE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],show_col_types = FALSE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- left_join(statpop_baden, statpop_yr, by="RELI")
}
#needs to be altered to be 1 df with all years
}
View(statpop_yr)
df <- left_join(statpop_baden, statpop_yr, by="RELI")
View(df)
?left_join
df <- full_join(statpop_baden, statpop_yr, by="RELI")
View(df)
df <- full_join(statpop_baden, statpop_yr)
# creating first dataframe
df1 <- data.frame(col1 = LETTERS[1:6],
col2a = c(5:10),
col3a = TRUE)
print ("First DataFrame")
print (df1)
df2 <- data.frame(col1 = LETTERS[4:8],
col2b= c(4:8),
col3b = FALSE)
print ("Second DataFrame")
print (df2)
df_merge <- merge(df1,df2,by="col1")
print("Merged DataFrame")
print (df_merge)
df_merge <- merge(df1,df2,by="col1",all=TRUE)
print (df_merge)
df <- merge(statpop_baden, statpop_yr, by="RELI",all = TRUE)
?merge
df <- merge(statpop_baden, statpop_yr, by="RELI",all.x = TRUE)
df <- full_merge(statpop_baden, statpop_yr, by=join_by("RELI"))
df <- full_join(statpop_baden, statpop_yr, by=join_by("RELI"))
df <- full_join(statpop_baden, statpop_yr, by=join_by("RELI"))
write.csv(df,"df.csv")
for (i in 1:length(statpop)) {
print(years[i])
if (years[i] >=2020) {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],
delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))
if (years[i] == 2021) {
statpop_baden <- statpop_yr #Adds 1st dataset to baden df
}
else {
select(statpop_yr, -c(X_KOORD,Y_KOORD,N_KOORD,E_KOORD)) #Removes Coordinates, as they stay constant throughout the years
statpop_baden <- full_join(statpop_baden, statpop_yr, by="RELI")
#Appends the new dataset to baden df, by joining by RELI, data belonging to each ha is put on the same row
}
}
else {
NOLOC_yr <- paste0("statpop/NOLOC/STATPOP",years[i],"_NOLOC.csv")
coords_baden <- read_delim(NOLOC_yr, show_col_types = FALSE)%>%
select(E_KOORD,N_KOORD,RELI,GDENR)%>%
mutate(GMDE=`GDENR`)
baden_data <- left_join(coords_baden,communes_baden, by="GMDE") %>%
filter(!is.na(Gemeinde))
e_range <- range(baden_data$E_KOORD)
n_range <- range(baden_data$N_KOORD)
statpop_yr <- read_delim(statpop[i],show_col_types = FALSE) %>%
filter(E_KOORD %in% (e_range[1]:e_range[2]), N_KOORD %in% (n_range[1]:n_range[2]))%>%
select(-c(X_KOORD,Y_KOORD,E_KOORD,N_KOORD))
statpop_baden <- full_join(statpop_baden, statpop_yr, by="RELI")
}
#needs to be altered to be 1 df with all years
}
write.csv(statpop_baden,"statpop/STATPOP_Baden_2021_2011.csv")
install.packages("readxl")
library(readxl)
library(dplyr)
data <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
install.packages("readxl")
library(readxl)
library(dplyr)
data <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
install.packages("readxl")
library(readxl)
library(dplyr)
data <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
install.packages("readxl")
library(readxl)
library(dplyr)
data1 <- read_excel("job_opportunities.xlsx")
install.packages("readxl")
library(readxl)
library(dplyr)
data1 <- read_excel("job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
value2 <- population$`2019`[i]
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("MigrationBaden/Migration-Simulator/main_data/job_opportunities.xlsx")
data1 <- read_excel("Migration-Simulator/main_data/job_opportunities.xlsx")
library(readxl)
library(dplyr)
data1 <- read_excel("Migration-Simulator/main_data/job_opportunities.xlsx")
