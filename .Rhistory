yrs <- c(2022:2011)
View(statpop_file)
View(statent_file)
View(communes_baden)
communes_baden <- read_excel("analysis/2021_Gemeinden.xlsx") %>%
mutate(GMDE=`Gmd-Nr.`)%>% #mutate adds a new column to gemeinden_baden,
dplyr::select(Gemeinde, GMDE)
library(tidyverse)
library(dplyr)
library(readr)
library(readxl)
library(xlsx)
communes_baden <- read_excel("analysis/2021_Gemeinden.xlsx") %>%
mutate(GDENR=`Gmd-Nr.`)%>% #mutate adds a new column to gemeinden_baden,
dplyr::select(Gemeinde, GMDE)
communes_baden <- read_excel("analysis/2021_Gemeinden.xlsx") %>%
mutate(GDENR=`Gmd-Nr.`)%>% #mutate adds a new column to gemeinden_baden,
dplyr::select(Gemeinde, GDENR)
yrs <- c(2022:2011)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATPOP_NO8",yrs[i],"_GMDE.csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATPOP_NO8_",yrs[i],"_GMDE.csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_NO8_",yrs[i],"_GMDE.csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_NO8_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
yrs <- c(2021:2011)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by=GDENR) %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
View(ent_yr)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden)] <- paste0(colnames(baden_ent)[2:ncol(baden)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden_ent)] <- paste0(colnames(baden_ent)[2:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statpop_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(ent_yr, communes_baden, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden_ent)] <- paste0(colnames(baden_ent)[2:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
View(statent_baden)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[2:ncol(baden_ent)] <- paste0(colnames(baden_ent)[2:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
write.csv(statent_baden,"analysis/STATENT_Communes.csv")
statent <- read_csv("analysis/STATENT_Communes.csv")
statent_geo <- left_join(commune_geo,statent,by=join_by(Gemeinde==Communes))
statent_geo <- left_join(commune_geo,statent,by=join_by(Gemeinde))
View(statent)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
baden_ent %>% dplyr::select(-Gemeinde)
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
baden_ent %>% dplyr::select(-contains(Gemeinde))
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
baden_ent %>% dplyr::select(-contains("Gemeinde"))
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
View(statent_baden)
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
baden_ent %>% dplyr::select(-contains("Gemeinde"))
print(baden_ent[,1:5])
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
for (i in 1:length(yrs)) {
#aka for the amount of files
print(yrs[i])#print which year is being worked on
filename <- paste0("analysis/STATENT/GMDE/STATENT_N08_GMDE_",yrs[i],".csv")
ent_yr <- read_delim(filename, delim = ";", escape_double = FALSE, trim_ws = TRUE, show_col_types = FALSE) %>%
dplyr::select(-contains("JAHR"))
baden_ent <- left_join(communes_baden, ent_yr, by="GDENR") %>%
filter(!is.na(Gemeinde))
colnames(baden_ent)[3:ncol(baden_ent)] <- paste0(colnames(baden_ent)[3:ncol(baden_ent)],"_",yrs[i])
if (i == 1) {
#The goal is to create a new data frame containing data per commune, so we start the df by setting it equal to the first year data
statent_baden <- baden_ent
}
else {
baden_ent <- dplyr::select(baden_ent,-contains("Gemeinde"))
print(baden_ent[,1:5])
statent_baden <- full_join(statent_baden, baden_ent, by="GDENR")
#here you join the data from the years together
#fulljoin(... by ="reli") will join rows together with the same RELI
#If one dataset doesnt have a certain RELI, then it will stil, create a new row, but put NA for whereever there isnt data
#e.g. in 2012 theres suddenly data for reli abc, which doesnt exist already in the data set, it will create a new row
#this new row will have all the data from 2012 and for all the other years, there will be nothing
}
}
write.csv(statent_baden,"analysis/STATENT_Communes.csv")
statent <- read_xlsx("analysis/STATENT_Communes.xslx")
statent <- read_xlsx("analysis/STATENT_Communes.xlsx")
statent_tot <- (dataset(as.data.frame(statent),"B08T"))
View(statent_file)
View(statent_tot)
View(gws_tot)
analysis(statent_tot,statent_tot$Years,statent_tot$Baden,
pop$Baden, "Population Baden",
"Statent Baden", "Time", "Amount of Businesses")
analysis_colour(statent_tot,
"Baden",
"Population in relation to amount of Businesses",
"Time",
"Population",
"Amount of Businesses")
plot(pop$Baden[-1],pop$Baden[-12])
pop$Baden[-12]
pop$Baden[]
pop$Baden[-1]
cbind(pop$Baden[-1],pop$Baden[-12])
plot(pop$Baden[-12],pop$Baden[-1])
plot(gws_tot,pop$Baden)
plot(gws_tot$Baden,pop$Baden)
View(pop)
plot(statent_tot$Baden,pop$Baden[2:nrow(pop)])
#remove (AG) suffix to some communes
commune <- commune_general_info$GMDNAME
for (i in 1:length(commune)) {
path <- paste0("ENTvsPOP",commune[i],".jpg")
jpg(file=path)
mytitle = paste(commune[i])
plot(statent_tot[,i],pop[2:now(pop),i], main = mytitle)
dev.off()
}
for (i in 1:length(commune)) {
path <- paste0("ENTvsPOP",commune[i],".jpeg")
jpeg(file=path)
mytitle = paste(commune[i])
plot(statent_tot[,i],pop[2:now(pop),i], main = mytitle)
dev.off()
}
pop[2:now(pop),i]
pop[2:now(pop),]
pop[,i]
pop[,i+1]
pop[2:nrow(pop)]
pop[2:nrow(pop),]
pop[2:nrow(pop),i+1]
for (i in 1:length(commune)) {
path <- paste0("ENTvsPOP",commune[i],".jpeg")
jpeg(file=path)
mytitle = paste(commune[i])
plot(statent_tot[,i+1],pop[2:nrow(pop),i+1], main = mytitle)
dev.off()
}
plot(statent_tot[,i+1],pop[2:nrow(pop),i+1], main = mytitle)
pop[2:nrow(pop),i+1]
statent_tot[,i+1]
as.tibble(statent_tot[,i+1])
for (i in 1:length(commune)) {
path <- paste0("ENTvsPOP",commune[i],".jpeg")
jpeg(file=path)
mytitle = paste(commune[i])
plot(as.tibble(statent_tot[,i+1]),pop[2:nrow(pop),i+1], main = mytitle)
dev.off()
}
pop_matrix <- matrix(data = 1, ncol = 26, nrow = 26)
View(pop_matrix)
gemeinden_baden <- read_excel("analysis/2021_Gemeinden.xlsx") %>%
mutate(GMDNR=`Gmd-Nr.`)
library(tidyverse)
library(sf) # spatial data handling
library(raster)
library(viridis) # viridis color scale
library(readxl)
library(patchwork)
gemeinden_baden <- read_excel("analysis/2021_Gemeinden.xlsx") %>%
mutate(GMDNR=`Gmd-Nr.`)
View(gemeinden_baden)
communes <- gemeinden_baden$Gemeinde
rownames(pop_matrix) <- communes
colnames(pop_matrix) <- communes
pop_matrix <-diag(26)
rownames(pop_matrix) <- communes
colnames(pop_matrix) <- communes
population <- read_xlsx("analysis/population_baden.xlsx")
View(population)
pop_v <- population$2022
pop_v <- population$"2022"
pop_m <- pop_m*2
pop_m <-diag(26)
pop_m <- pop_m*2
pop_V <- pop_m %*% pop_v
View(pop_m)
rownames(pop_m) <- communes
colnames(pop_m) <- communes
pop_v <- as.matrix(population$"2022")
pop_V <- pop_m %*% pop_v
View(pop_v)
pop_v <- as.matrix(population$"2022"[-1])
pop_V <- pop_m %*% pop_v
pop_m %*% pop_v
